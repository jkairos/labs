#H2 In-Memory
#By default, when the last connection to a in-memory database is closed, the contents are lost.
#This can be disabled by adding ;DB_CLOSE_DELAY=-1 to the database URL. 
#That means to keep the contents of an in-memory database as long as the virtual machine is alive 
#Tests were failing because (recheck), since we populate the schema only once, after the first connection is closed, the schema is also lost, and next test seed could not be inserted.
#Either we also populate the schema on each test case to get rid of this parameter, or find a way to keep a connection open from junit first test to last (junit run lifecycle?)
#dbUser=sa
#dbPwd=sa
#dbUrl=jdbc:h2:mem:callback;MODE=PostgreSQL;MVCC=TRUE
#dbDriver=org.h2.Driver
#dbDialect=org.hibernate.dialect.H2Dialect
#Postgresql localhost
dbUser=callbackdevuser
dbPwd=callbackdevuser
dbUrl=jdbc:postgresql://192.168.88.12:5432/callback
dbDriver=org.postgresql.Driver
dbDialect=org.hibernate.dialect.PostgreSQLDialect
############################################################################C3P0 CONFIGURATION MANDATORY PROPERTIES########################################################################################################
#Minimum number of Connections a pool will maintain at any given time.
min_connections=2
#Maximum number of Connections a pool will maintain at any given time.
max_connections=50
#Seconds a Connection can remain pooled but unused before being discarded. Zero means idle connections never expire.
max_idle_time=300
 #If this is a number greater than 0, c3p0 will test all idle, pooled but unchecked-out connections, every this number of seconds.
connection_idle_test_period=600
#Determines how many connections at a time c3p0 will try to acquire when the pool is exhausted.
acquire_increment=2
#The size of c3p0's global PreparedStatement cache. If both maxStatements and maxStatementsPerConnection are zero, statement caching will not be enabled.
max_statements=0
#Defines how many times c3p0 will try to acquire a new Connection from the database before giving up. If this value is less than or equal to zero, 
#c3p0 will keep trying to fetch a Connection indefinitely. 
acquire_retry_attempts=2
#Milliseconds, time c3p0 will wait between acquire attempts.
acquire_retry_delay=2000
#The number of milliseconds a client calling getConnection() will wait for a Connection to be checked-in or acquired when the pool is exhausted. 
#Zero means wait indefinitely. Setting any positive value will cause the getConnection() call to time-out and break with an SQLException after the specified number of milliseconds. 
checkoutTimeout=3000
############################################################################C3P0 CONFIGURATION OPTIONAL PROPERTIES########################################################################################################
#If true, an operation will be performed at every connection checkout to verify that the connection is valid. 
#Be sure to set an efficient preferredTestQuery or automaticTestTable if you set this to true. 
#Performing the (expensive) default Connection test on every client checkout will harm client performance. 
#Testing Connections in checkout is the simplest and most reliable form of Connection testing, but for better performance, 
#consider verifying connections periodically using idleConnectionTestPeriod.
testConnectionOnCheckout=false
#Defines the query that will be executed for all connection tests. Defining a preferredTestQuery that will execute quickly in your database may dramatically 
#speed up Connection tests. (If no preferredTestQuery is set, the default ConnectionTester executes a getTables() call on the Connection's DatabaseMetaData. 
#Depending on your database, this may execute more slowly than a "normal" database query.) NOTE: The table against which your preferredTestQuery will be run 
#must exist in the database schema prior to your initialization of your DataSource. If your application defines its own schema, try automaticTestTable instead.
preferredTestQuery=
#If provided, c3p0 will create an empty table of the specified name, and use queries against that table to test the Connection. 
#If automaticTestTable is provided, c3p0 will generate its own test query, therefore any preferredTestQuery set will be ignored. 
#You should not work with the named table after c3p0 creates it; it should be strictly for c3p0's use in testing your Connection. 
automaticTestTable=
###########################################################################CACHE SPECIFIC###############################################################################################################
#TTL of cached entries in seconds. Zero means cache is disabled.
cache_entries_time_to_live_in_seconds=0
#Max Number of cached entries in the local heap
cache_max_entries=1000
#A cache eviction algorithm is a way of deciding which element to evict when the cache is full. Three eviction algorithms are provided to choose from for the MemoryStore:
# Least Recently Used (LRU) - This is the default and is a variation on Least Frequently Used.
# Least Frequently Used (LFU) - Least Frequently Used (LFU)
# First In First Out (FIFO) - Elements are evicted in the same order as they come in. 
memory_store_eviction_policy=LRU
####################################################################POSTGRES SPECIFIC################################################################################################################
#Specifies the name of the application that is using the connection. This allows a database administrator to see what applications are connected to the server and what resources 
#they are using through views like pgstatactivity.
#application_name=data-layer

#The timeout value used for socket read operations. If reading from the server takes longer than this value, the connection is closed. 
#This can be used as both a brute force global query timeout and a method of detecting network problems. 
#The timeout is specified in seconds and a value of zero means that it is disabled.
#socketTimeout=60000

#Enable or disable TCP keep-alive probe. The default is false.
#tcpKeepAlive=false

#The timeout value used for socket connect operations. If connecting to the server takes longer than this value, the connection is broken. 
#The timeout is specified in seconds and a value of zero means that it is disabled.  
#connection_timeout=1000
##########################################################################################################################################################################################################
#H2 Embedded - use h2 console pointing to the url to access
#dbUser=sa
#dbPwd=
#dbUrl=jdbc:h2:~/callback;MODE=PostgreSQL;MVCC=TRUE
#dbDriver=org.h2.Driver
#dbDialect=org.hibernate.dialect.H2Dialect

#Postgresql localhost
#dbUser=callback
#dbPwd=callback
#dbUrl=jdbc:postgresql://localhost:6198/callback
#dbDriver=org.postgresql.Driver
#dbDialect=org.hibernate.dialect.PostgreSQLDialect